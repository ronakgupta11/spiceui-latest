'use strict';

var jsxRuntime = require('react/jsx-runtime');
var react = require('@floating-ui/react');
var clsx = require('clsx');
var React = require('react');
var makePrefixer = require('../utils/makePrefixer.js');
var useFloatingUI = require('../utils/useFloatingUI/useFloatingUI.js');
var useForkRef = require('../utils/useForkRef.js');
require('../utils/useId.js');
require('../salt-provider/SaltProvider.js');
require('../viewport/ViewportProvider.js');
var MenuContext = require('./MenuContext.js');
var MenuPanelBase = require('./MenuPanelBase.js');
var MenuPanelContext = require('./MenuPanelContext.js');

const withBaseName = makePrefixer.makePrefixer("saltMenuPanel");
const MenuPanel = React.forwardRef(
  function MenuPanel2(props, ref) {
    const { children, className, ...rest } = props;
    const { Component: FloatingComponent } = useFloatingUI.useFloatingComponent();
    const {
      getItemProps,
      openState,
      getFloatingProps,
      refs,
      getPanelPosition,
      context,
      elementsRef,
      activeIndex,
      setFocusInside,
      isNested
    } = MenuContext.useMenuContext();
    const handleRef = useForkRef.useForkRef(ref, refs == null ? void 0 : refs.setFloating);
    return /* @__PURE__ */ jsxRuntime.jsx(
      MenuPanelContext.MenuPanelContext.Provider,
      {
        value: { activeIndex, getItemProps, setFocusInside },
        children: /* @__PURE__ */ jsxRuntime.jsx(react.FloatingList, { elementsRef, children: /* @__PURE__ */ jsxRuntime.jsx(
          FloatingComponent,
          {
            open: openState,
            role: "menu",
            ...getFloatingProps(),
            ...getPanelPosition(),
            className: clsx.clsx(withBaseName(), className),
            focusManagerProps: context ? {
              context,
              initialFocus: isNested ? -1 : 0,
              returnFocus: !isNested,
              modal: false
            } : void 0,
            tabIndex: -1,
            ref: handleRef,
            ...rest,
            children: /* @__PURE__ */ jsxRuntime.jsx(MenuPanelBase.MenuPanelBase, { children })
          }
        ) })
      }
    );
  }
);

exports.MenuPanel = MenuPanel;
//# sourceMappingURL=MenuPanel.js.map
