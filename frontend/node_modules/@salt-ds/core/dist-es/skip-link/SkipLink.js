import { jsx } from 'react/jsx-runtime';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import { clsx } from 'clsx';
import { forwardRef, useState, useRef, useEffect } from 'react';
import { makePrefixer } from '../utils/makePrefixer.js';
import '../utils/useFloatingUI/useFloatingUI.js';
import '../utils/useId.js';
import '../salt-provider/SaltProvider.js';
import '../viewport/ViewportProvider.js';
import css_248z from './SkipLink.css.js';
import { useManageFocusOnTarget } from './internal/useManageFocusOnTarget.js';

const withBaseName = makePrefixer("saltSkipLink");
const SkipLink = forwardRef(
  function SkipLink2({ className, targetId, children, onKeyUp, onBlur, onClick, ...rest }, ref) {
    const [isTargetAvailable, setIsTargetAvailable] = useState(false);
    const targetWindow = useWindow();
    useComponentCssInjection({
      testId: "salt-skip-link",
      css: css_248z,
      window: targetWindow
    });
    const targetRef = useRef(null);
    useEffect(() => {
      if (targetWindow) {
        targetRef.current = targetWindow.document.getElementById(targetId);
      }
      setIsTargetAvailable(!!targetRef.current);
    }, [targetId, targetWindow]);
    const eventHandlers = useManageFocusOnTarget({
      onKeyUp,
      onBlur,
      onClick,
      targetRef,
      targetClass: withBaseName("target")
    });
    if (!isTargetAvailable) return null;
    return /* @__PURE__ */ jsx(
      "a",
      {
        className: clsx(withBaseName(), className),
        href: `#${targetId}`,
        ref,
        target: "_self",
        ...eventHandlers,
        ...rest,
        children
      }
    );
  }
);

export { SkipLink };
//# sourceMappingURL=SkipLink.js.map
