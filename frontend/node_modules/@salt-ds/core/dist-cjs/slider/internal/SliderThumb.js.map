{"version":3,"file":"SliderThumb.js","sources":["../src/slider/internal/SliderThumb.tsx"],"sourcesContent":["import { useComponentCssInjection } from \"@salt-ds/styles\";\nimport { useWindow } from \"@salt-ds/window\";\nimport { clsx } from \"clsx\";\nimport {\n  type ChangeEvent,\n  type ComponentPropsWithoutRef,\n  type RefObject,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\nimport { makePrefixer, useId } from \"../../utils\";\nimport sliderThumbCss from \"./SliderThumb.css\";\nimport { SliderTooltip } from \"./SliderTooltip\";\n\nconst withBaseName = makePrefixer(\"saltSliderThumb\");\n\ninterface SliderThumbProps\n  extends Omit<\n    ComponentPropsWithoutRef<\"input\">,\n    \"onChange\" | \"defaultValue\" | \"min\" | \"max\"\n  > {\n  accessibleMaxText?: string;\n  accessibleMinText?: string;\n  disabled: boolean;\n  format?: (value: number) => number | string;\n  handleInputChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  handleKeydownOnThumb: (event: React.KeyboardEvent) => void;\n  handlePointerDown: (event: React.PointerEvent<HTMLDivElement>) => void;\n  index?: number;\n  inputRef?: RefObject<HTMLInputElement>;\n  isFocusVisible: boolean;\n  max: number;\n  maxLabel?: string;\n  min: number;\n  minLabel?: string;\n  offsetPercentage?: string;\n  restrictToMarks?: boolean;\n  showTooltip?: boolean;\n  sliderValue: [number, number] | number;\n  step: number;\n  stepMultiplier: number;\n  trackDragging: boolean;\n}\n\nexport const SliderThumb = ({\n  \"aria-label\": ariaLabel,\n  \"aria-valuetext\": ariaValueText,\n  \"aria-labelledby\": ariaLabelledBy,\n  accessibleMaxText,\n  accessibleMinText,\n  disabled,\n  format,\n  handleInputChange,\n  handleKeydownOnThumb,\n  handlePointerDown,\n  index = 0,\n  inputRef,\n  isFocusVisible,\n  max,\n  maxLabel,\n  min,\n  minLabel,\n  offsetPercentage,\n  restrictToMarks,\n  showTooltip,\n  sliderValue,\n  step,\n  stepMultiplier,\n  trackDragging,\n  ...rest\n}: SliderThumbProps) => {\n  {\n    const targetWindow = useWindow();\n    useComponentCssInjection({\n      testId: \"salt-slider-thumb\",\n      css: sliderThumbCss,\n      window: targetWindow,\n    });\n\n    const [isTooltipVisible, setIsTooltipVisible] = useState(false);\n    const id = useId();\n    const accessibleTextId = `saltSlider-${id}-${index}`;\n    const value = Array.isArray(sliderValue) ? sliderValue[index] : sliderValue;\n    const formattedValue = format ? format(value) : value;\n\n    const handleKeyDown = useCallback((event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        setIsTooltipVisible(false);\n      }\n    }, []);\n\n    useEffect(() => {\n      if (showTooltip && isTooltipVisible) {\n        targetWindow?.addEventListener(\"keydown\", handleKeyDown);\n      }\n      return () => targetWindow?.removeEventListener(\"keydown\", handleKeyDown);\n    }, [handleKeyDown, isTooltipVisible, showTooltip, targetWindow]);\n\n    const handlePointerEnter = () => setIsTooltipVisible(true);\n\n    const handlePointerLeave = () => {\n      // Delay hiding the tooltip to enable tooltip\n      // visibility on hover\n      setTimeout(() => {\n        setIsTooltipVisible(false);\n      }, 300);\n    };\n\n    return (\n      <div\n        className={clsx(withBaseName(), {\n          [withBaseName(\"focusVisible\")]: isFocusVisible,\n          [withBaseName(\"disabled\")]: disabled,\n          [withBaseName(\"dragging\")]: trackDragging,\n          [withBaseName(\"secondThumb\")]: index === 1,\n        })}\n        data-testid=\"sliderThumb\"\n        onPointerDown={handlePointerDown}\n        style={{ left: offsetPercentage }}\n        {...(showTooltip && {\n          onPointerEnter: handlePointerEnter,\n          onPointerLeave: handlePointerLeave,\n        })}\n      >\n        {showTooltip && (\n          <SliderTooltip\n            value={formattedValue}\n            open={\n              (isTooltipVisible || trackDragging || isFocusVisible) && !disabled\n            }\n          />\n        )}\n        <input\n          disabled={disabled}\n          type=\"range\"\n          ref={inputRef}\n          className={withBaseName(\"input\")}\n          value={value}\n          onChange={handleInputChange}\n          onKeyDown={handleKeydownOnThumb}\n          aria-labelledby={ariaLabelledBy}\n          aria-valuenow={value}\n          aria-valuetext={ariaValueText || format?.(value).toString()}\n          aria-label={ariaLabel}\n          aria-describedby={accessibleTextId}\n          min={min}\n          max={max}\n          step={step}\n          {...rest}\n        />\n        {/* Accessible text */}\n        <span\n          aria-hidden=\"true\"\n          id={accessibleTextId}\n          className={withBaseName(\"accessibleText\")}\n        >\n          {Array.isArray(sliderValue) &&\n            `${index === 0 ? \"leading\" : \"trailing\"}, ${format?.(sliderValue[0]) || sliderValue[0]} to ${format?.(sliderValue[1]) || sliderValue[1]}, `}\n          range{\" \"}\n          {accessibleMinText\n            ? `${accessibleMinText} ${min}, `\n            : `minimum ${format?.(min) || min}, `}\n          {accessibleMaxText\n            ? `${accessibleMaxText} ${max} `\n            : `maximum ${format?.(max) || max}`}\n          {restrictToMarks\n            ? \", custom increments\"\n            : step !== 1 && `, increments of ${step}`}\n        </span>\n      </div>\n    );\n  }\n};\n"],"names":["makePrefixer","useWindow","useComponentCssInjection","sliderThumbCss","useState","useId","useCallback","useEffect","jsxs","clsx","jsx","SliderTooltip"],"mappings":"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"}