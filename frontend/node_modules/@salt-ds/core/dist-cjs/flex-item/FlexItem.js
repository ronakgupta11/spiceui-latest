'use strict';

var jsxRuntime = require('react/jsx-runtime');
var styles = require('@salt-ds/styles');
var window = require('@salt-ds/window');
var clsx = require('clsx');
var React = require('react');
var BreakpointProvider = require('../breakpoints/BreakpointProvider.js');
var parseSpacing = require('../flex-layout/parseSpacing.js');
var makePrefixer = require('../utils/makePrefixer.js');
require('../utils/useFloatingUI/useFloatingUI.js');
require('../utils/useId.js');
var useResponsiveProp = require('../utils/useResponsiveProp.js');
var FlexItem$1 = require('./FlexItem.css.js');

const withBaseName = makePrefixer.makePrefixer("saltFlexItem");
const FLEX_ITEM_ALIGNMENTS = [
  "start",
  "end",
  "center",
  "stretch"
];
const FlexItem = React.forwardRef(
  ({
    as,
    align,
    children,
    className,
    margin = 0,
    padding = 0,
    shrink,
    grow,
    basis,
    style,
    ...rest
  }, ref) => {
    const targetWindow = window.useWindow();
    styles.useComponentCssInjection({
      testId: "salt-flex-item",
      css: FlexItem$1,
      window: targetWindow
    });
    const { matchedBreakpoints } = BreakpointProvider.useBreakpoint();
    const Component = as || "div";
    const flexItemShrink = useResponsiveProp.resolveResponsiveValue(shrink, matchedBreakpoints);
    const flexItemGrow = useResponsiveProp.resolveResponsiveValue(grow, matchedBreakpoints);
    const flexItemBasis = useResponsiveProp.resolveResponsiveValue(basis, matchedBreakpoints);
    const flexItemMargin = useResponsiveProp.resolveResponsiveValue(margin, matchedBreakpoints);
    const flexItemPadding = useResponsiveProp.resolveResponsiveValue(padding, matchedBreakpoints);
    const itemStyle = {
      "--flexItem-margin": parseSpacing.parseSpacing(flexItemMargin),
      "--flexItem-padding": parseSpacing.parseSpacing(flexItemPadding),
      "--saltFlexItem-alignment": align,
      "--saltFlexItem-shrink": flexItemShrink,
      "--saltFlexItem-grow": flexItemGrow,
      "--saltFlexItem-basis": flexItemBasis,
      ...style
    };
    return /* @__PURE__ */ jsxRuntime.jsx(
      Component,
      {
        className: clsx.clsx(withBaseName(), className),
        ref,
        style: itemStyle,
        ...rest,
        children
      }
    );
  }
);

exports.FLEX_ITEM_ALIGNMENTS = FLEX_ITEM_ALIGNMENTS;
exports.FlexItem = FlexItem;
//# sourceMappingURL=FlexItem.js.map
