'use strict';

var jsxRuntime = require('react/jsx-runtime');
var styles = require('@salt-ds/styles');
var window = require('@salt-ds/window');
var clsx = require('clsx');
var React = require('react');
var makePrefixer = require('../utils/makePrefixer.js');
require('../utils/useFloatingUI/useFloatingUI.js');
require('../utils/useId.js');
var useIsomorphicLayoutEffect = require('../utils/useIsomorphicLayoutEffect.js');
require('../salt-provider/SaltProvider.js');
require('../viewport/ViewportProvider.js');
var AccordionContext = require('./AccordionContext.js');
var AccordionPanel$1 = require('./AccordionPanel.css.js');

const withBaseName = makePrefixer.makePrefixer("saltAccordionPanel");
const AccordionPanel = React.forwardRef(
  function AccordionPanel2(props, ref) {
    const { children, className, id, ...rest } = props;
    const targetWindow = window.useWindow();
    styles.useComponentCssInjection({
      testId: "salt-accordion-panel",
      css: AccordionPanel$1,
      window: targetWindow
    });
    const { headerId, panelId, setPanelId, expanded, indicatorSide } = AccordionContext.useAccordion();
    useIsomorphicLayoutEffect.useIsomorphicLayoutEffect(() => {
      if (id) {
        setPanelId(id);
      }
    }, [id, setPanelId]);
    return /* @__PURE__ */ jsxRuntime.jsx(
      "div",
      {
        ref,
        className: clsx.clsx(withBaseName(), className),
        role: "region",
        id: panelId,
        "aria-labelledby": headerId,
        "aria-hidden": !expanded ? "true" : void 0,
        hidden: !expanded,
        ...rest,
        children: /* @__PURE__ */ jsxRuntime.jsx("div", { className: withBaseName("inner"), children: /* @__PURE__ */ jsxRuntime.jsx(
          "div",
          {
            className: clsx.clsx(withBaseName("content"), {
              [withBaseName("indentedContent")]: indicatorSide === "left"
            }),
            children
          }
        ) })
      }
    );
  }
);

exports.AccordionPanel = AccordionPanel;
//# sourceMappingURL=AccordionPanel.js.map
