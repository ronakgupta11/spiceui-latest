{"version":3,"file":"TooltipBase.js","sources":["../src/tooltip/TooltipBase.tsx"],"sourcesContent":["import { FloatingArrow, type FloatingArrowProps } from \"@floating-ui/react\";\nimport { useFormFieldProps } from \"../form-field-context\";\nimport { StatusIndicator, type ValidationStatus } from \"../status-indicator\";\nimport { makePrefixer } from \"../utils\";\nimport type { TooltipProps } from \"./Tooltip\";\n\nimport { useComponentCssInjection } from \"@salt-ds/styles\";\nimport { useWindow } from \"@salt-ds/window\";\nimport tooltipCss from \"./Tooltip.css\";\n\nconst withBaseName = makePrefixer(\"saltTooltip\");\n\ninterface TooltipBaseProps extends Omit<TooltipProps, \"children\"> {\n  arrowProps: FloatingArrowProps;\n  /**\n   * Optional string to determine the status of the Tooltip.\n   */\n  status?: ValidationStatus;\n}\n\nexport const TooltipBase = (props: TooltipBaseProps) => {\n  const targetWindow = useWindow();\n  useComponentCssInjection({\n    testId: \"salt-tooltip\",\n    css: tooltipCss,\n    window: targetWindow,\n  });\n\n  const { a11yProps } = useFormFieldProps();\n\n  const { arrowProps, content, hideArrow, hideIcon, status } = props;\n\n  return (\n    <>\n      <div className={withBaseName(\"container\")}>\n        {!hideIcon && status && (\n          <StatusIndicator\n            status={status}\n            size={1}\n            className={withBaseName(\"icon\")}\n          />\n        )}\n        <span\n          id={a11yProps?.[\"aria-describedby\"]}\n          className={withBaseName(\"content\")}\n        >\n          {content}\n        </span>\n      </div>\n      {!hideArrow && (\n        <FloatingArrow\n          {...arrowProps}\n          className={withBaseName(\"arrow\")}\n          strokeWidth={1}\n          fill=\"var(--salt-container-primary-background)\"\n          stroke=\"var(--tooltip-status-borderColor)\"\n          height={5}\n          width={10}\n        />\n      )}\n    </>\n  );\n};\n"],"names":["makePrefixer","useWindow","useComponentCssInjection","tooltipCss","useFormFieldProps","jsxs","Fragment","jsx","StatusIndicator","FloatingArrow"],"mappings":";;;;;;;;;;;;;;;;;;AAUA,MAAM,YAAA,GAAeA,0BAAa,aAAa,CAAA;AAUlC,MAAA,WAAA,GAAc,CAAC,KAA4B,KAAA;AACtD,EAAA,MAAM,eAAeC,gBAAU,EAAA;AAC/B,EAAyBC,+BAAA,CAAA;AAAA,IACvB,MAAQ,EAAA,cAAA;AAAA,IACR,GAAK,EAAAC,OAAA;AAAA,IACL,MAAQ,EAAA;AAAA,GACT,CAAA;AAED,EAAM,MAAA,EAAE,SAAU,EAAA,GAAIC,mCAAkB,EAAA;AAExC,EAAA,MAAM,EAAE,UAAY,EAAA,OAAA,EAAS,SAAW,EAAA,QAAA,EAAU,QAAW,GAAA,KAAA;AAE7D,EAAA,uBAEIC,eAAA,CAAAC,mBAAA,EAAA,EAAA,QAAA,EAAA;AAAA,oBAAAD,eAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAW,YAAa,CAAA,WAAW,CACrC,EAAA,QAAA,EAAA;AAAA,MAAA,CAAC,YAAY,MACZ,oBAAAE,cAAA;AAAA,QAACC,+BAAA;AAAA,QAAA;AAAA,UACC,MAAA;AAAA,UACA,IAAM,EAAA,CAAA;AAAA,UACN,SAAA,EAAW,aAAa,MAAM;AAAA;AAAA,OAChC;AAAA,sBAEFD,cAAA;AAAA,QAAC,MAAA;AAAA,QAAA;AAAA,UACC,IAAI,SAAY,IAAA,IAAA,GAAA,MAAA,GAAA,SAAA,CAAA,kBAAA,CAAA;AAAA,UAChB,SAAA,EAAW,aAAa,SAAS,CAAA;AAAA,UAEhC,QAAA,EAAA;AAAA;AAAA;AACH,KACF,EAAA,CAAA;AAAA,IACC,CAAC,SACA,oBAAAA,cAAA;AAAA,MAACE,mBAAA;AAAA,MAAA;AAAA,QACE,GAAG,UAAA;AAAA,QACJ,SAAA,EAAW,aAAa,OAAO,CAAA;AAAA,QAC/B,WAAa,EAAA,CAAA;AAAA,QACb,IAAK,EAAA,0CAAA;AAAA,QACL,MAAO,EAAA,mCAAA;AAAA,QACP,MAAQ,EAAA,CAAA;AAAA,QACR,KAAO,EAAA;AAAA;AAAA;AACT,GAEJ,EAAA,CAAA;AAEJ;;;;"}