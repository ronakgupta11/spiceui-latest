'use strict';

var jsxRuntime = require('react/jsx-runtime');
var styles = require('@salt-ds/styles');
var window = require('@salt-ds/window');
var clsx = require('clsx');
var React = require('react');
var makePrefixer = require('../utils/makePrefixer.js');
require('../utils/useFloatingUI/useFloatingUI.js');
var useId = require('../utils/useId.js');
require('../salt-provider/SaltProvider.js');
require('../viewport/ViewportProvider.js');
var OptionGroup$1 = require('./OptionGroup.css.js');

const withBaseName = makePrefixer.makePrefixer("saltOptionGroup");
const OptionGroup = React.forwardRef(
  function OptionGroup2(props, ref) {
    const { className, children, label, ...rest } = props;
    const targetWindow = window.useWindow();
    styles.useComponentCssInjection({
      testId: "salt-option-group",
      css: OptionGroup$1,
      window: targetWindow
    });
    const labelId = useId.useId();
    return /* @__PURE__ */ jsxRuntime.jsxs(
      "div",
      {
        "aria-labelledby": labelId,
        className: clsx.clsx(withBaseName(), className),
        role: "group",
        ref,
        ...rest,
        children: [
          /* @__PURE__ */ jsxRuntime.jsx("div", { "aria-hidden": true, className: withBaseName("label"), id: labelId, children: label }),
          children
        ]
      }
    );
  }
);

exports.OptionGroup = OptionGroup;
//# sourceMappingURL=OptionGroup.js.map
