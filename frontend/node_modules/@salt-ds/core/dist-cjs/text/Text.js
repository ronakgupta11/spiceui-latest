'use strict';

var jsxRuntime = require('react/jsx-runtime');
var clsx = require('clsx');
var React = require('react');
var makePrefixer = require('../utils/makePrefixer.js');
require('../utils/useFloatingUI/useFloatingUI.js');
require('../utils/useId.js');
require('../salt-provider/SaltProvider.js');
require('../viewport/ViewportProvider.js');
var styles = require('@salt-ds/styles');
var window = require('@salt-ds/window');
var Text$1 = require('./Text.css.js');

const withBaseName = makePrefixer.makePrefixer("saltText");
const Text = React.forwardRef(function Text2({
  as,
  children,
  className,
  disabled = false,
  maxRows,
  style,
  styleAs,
  variant,
  color: colorProp,
  ...restProps
}, ref) {
  const targetWindow = window.useWindow();
  styles.useComponentCssInjection({
    testId: "salt-text",
    css: Text$1,
    window: targetWindow
  });
  const Component = as ?? "div";
  const textStyles = { "--text-max-rows": maxRows, ...style };
  const color = variant ?? colorProp ?? "primary";
  return /* @__PURE__ */ jsxRuntime.jsx(
    Component,
    {
      className: clsx.clsx(
        withBaseName(),
        {
          [withBaseName("disabled")]: disabled,
          [withBaseName("lineClamp")]: maxRows,
          [withBaseName(styleAs)]: styleAs,
          [withBaseName(color)]: color !== "inherit"
        },
        className
      ),
      ...restProps,
      ref,
      style: textStyles,
      children
    }
  );
});

exports.Text = Text;
//# sourceMappingURL=Text.js.map
