{"version":3,"file":"CircularProgress.js","sources":["../src/progress/CircularProgress/CircularProgress.tsx"],"sourcesContent":["import { useComponentCssInjection } from \"@salt-ds/styles\";\nimport { useWindow } from \"@salt-ds/window\";\nimport { clsx } from \"clsx\";\nimport {\n  type CSSProperties,\n  type ComponentPropsWithoutRef,\n  forwardRef,\n} from \"react\";\nimport { Text } from \"../../text\";\nimport { makePrefixer } from \"../../utils\";\n\nimport circularProgressCSS from \"./CircularProgress.css\";\n\nconst withBaseName = makePrefixer(\"saltCircularProgress\");\n\nconst getRotationAngle = (bar: number, shift = 0) => {\n  return -180 + ((bar - shift) / 50) * 180;\n};\n\nexport interface CircularProgressProps extends ComponentPropsWithoutRef<\"div\"> {\n  /**\n   * The value of the buffer indicator.\n   * Value between 0 and max.\n   */\n  bufferValue?: number;\n  /**\n   * Whether to hide the text label within the progress. Defaults to `false`.\n   */\n  hideLabel?: boolean;\n  /**\n   * The value of the max progress indicator.\n   * Default value is 100.\n   */\n  max?: number;\n  /**\n   * The value of the min progress indicator.\n   * Default value is 0.\n   */\n  min?: number;\n  /**\n   * The value of the progress indicator.\n   * Value between 0 and max.\n   */\n  value?: number;\n}\n\nexport const CircularProgress = forwardRef<\n  HTMLDivElement,\n  CircularProgressProps\n>(function CircularProgress(\n  {\n    className,\n    hideLabel = false,\n    max = 100,\n    min = 0,\n    value = 0,\n    bufferValue = 0,\n    ...rest\n  },\n  ref,\n) {\n  const targetWindow = useWindow();\n  useComponentCssInjection({\n    testId: \"salt-circular-progress\",\n    css: circularProgressCSS,\n    window: targetWindow,\n  });\n\n  const bufferSubOverlayRightStyle: CSSProperties = {};\n  const bufferSubOverlayLeftStyle: CSSProperties = {};\n  const barSubOverlayRightStyle: CSSProperties = {};\n  const barSubOverlayLeftStyle: CSSProperties = {};\n\n  const buffer = ((bufferValue - min) / (max - min)) * 100;\n  const progress = ((value - min) / (max - min)) * 100;\n\n  if (progress <= 50) {\n    const rotationAngle = getRotationAngle(progress);\n    barSubOverlayRightStyle.transform = `rotate(${rotationAngle}deg)`;\n    barSubOverlayLeftStyle.transform = \"rotate(-180deg)\";\n  } else {\n    const rotationAngle = getRotationAngle(progress, 50);\n    barSubOverlayRightStyle.transform = \"rotate(0deg)\";\n    barSubOverlayLeftStyle.transform = `rotate(${rotationAngle}deg)`;\n  }\n  if (buffer <= 50) {\n    const rotationAngle = getRotationAngle(buffer);\n    bufferSubOverlayRightStyle.transform = `rotate(${rotationAngle}deg)`;\n    bufferSubOverlayLeftStyle.transform = \"rotate(-180deg)\";\n  } else {\n    const rotationAngle = getRotationAngle(buffer, 50);\n    bufferSubOverlayRightStyle.transform = \"rotate(0deg)\";\n    bufferSubOverlayLeftStyle.transform = `rotate(${rotationAngle}deg)`;\n  }\n\n  return (\n    <div\n      className={clsx(withBaseName(), className)}\n      ref={ref}\n      role=\"progressbar\"\n      aria-valuemax={max}\n      aria-valuemin={min}\n      aria-valuenow={Math.round(value)}\n      {...rest}\n    >\n      <div className={withBaseName(\"track\")} />\n      <div className={withBaseName(\"bars\")}>\n        {buffer > 0 && (\n          <div className={withBaseName(\"bufferOverlayRight\")}>\n            <div\n              className={clsx(withBaseName(\"bufferSubOverlayRight\"), {\n                [withBaseName(\"bufferSubOverlay\")]: buffer <= 50,\n              })}\n              style={bufferSubOverlayRightStyle}\n            >\n              <div className={withBaseName(\"bufferBackground\")} />\n              <div className={withBaseName(\"bufferBorder\")} />\n            </div>\n          </div>\n        )}\n        <div className={withBaseName(\"barOverlayRight\")}>\n          <div\n            className={withBaseName(\"barSubOverlayRight\")}\n            style={barSubOverlayRightStyle}\n          >\n            <div className={withBaseName(\"bar\")} />\n          </div>\n        </div>\n        {buffer > 0 && (\n          <div className={withBaseName(\"bufferOverlayLeft\")}>\n            <div\n              className={clsx(\n                withBaseName(\"bufferSubOverlay\"),\n                withBaseName(\"bufferSubOverlayLeft\"),\n              )}\n              style={bufferSubOverlayLeftStyle}\n            >\n              <div className={withBaseName(\"bufferBorder\")} />\n              <div className={withBaseName(\"bufferBackground\")} />\n            </div>\n          </div>\n        )}\n        <div className={withBaseName(\"barOverlayLeft\")}>\n          <div\n            className={withBaseName(\"barSubOverlayLeft\")}\n            style={barSubOverlayLeftStyle}\n          >\n            <div className={withBaseName(\"bar\")} />\n          </div>\n        </div>\n      </div>\n      {!hideLabel && (\n        <Text styleAs=\"h2\" className={withBaseName(\"progressLabel\")}>\n          {`${Math.round(progress)} %`}\n        </Text>\n      )}\n    </div>\n  );\n});\n"],"names":["makePrefixer","forwardRef","CircularProgress","useWindow","useComponentCssInjection","circularProgressCSS","jsxs","clsx","jsx","Text"],"mappings":"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"}