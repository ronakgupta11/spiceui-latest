import { jsxs, jsx } from 'react/jsx-runtime';
import { clsx } from 'clsx';
import { forwardRef } from 'react';
import { Button } from '../button/Button.js';
import { useIcon } from '../semantic-icon-provider/SemanticIconProvider.js';
import { Text } from '../text/Text.js';
import '../text/Code.js';
import '../text/Display.js';
import '../text/Headings.js';
import '../text/Label.js';
import '../text/TextAction.js';
import '../text/TextNotation.js';
import { makePrefixer } from '../utils/makePrefixer.js';
import '../utils/useFloatingUI/useFloatingUI.js';
import '../utils/useId.js';
import '../salt-provider/SaltProvider.js';
import '../viewport/ViewportProvider.js';
import { PageButton } from './PageButton.js';
import { usePaginationContext } from './usePaginationContext.js';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import css_248z from './CompactPaginator.css.js';

const withBaseName = makePrefixer("saltCompactPaginator");
const CompactPaginator = forwardRef(function CompactPaginator2({ children, className, ...restProps }, ref) {
  const targetWindow = useWindow();
  useComponentCssInjection({
    testId: "salt-compact-paginator",
    css: css_248z,
    window: targetWindow
  });
  const { NextIcon, PreviousIcon } = useIcon();
  const { count, page, onPageChange } = usePaginationContext();
  const onPreviousPage = (event) => {
    onPageChange(event, Math.max(1, page - 1));
  };
  const onNextPage = (event) => {
    onPageChange(event, Math.min(page + 1, count));
  };
  const isOnFirstPage = page === 1;
  const isOnLastPage = page === count;
  return /* @__PURE__ */ jsxs("div", { className: clsx(withBaseName(), className), ...restProps, ref, children: [
    /* @__PURE__ */ jsx(
      Button,
      {
        appearance: "transparent",
        "aria-label": "Previous Page",
        onClick: onPreviousPage,
        disabled: isOnFirstPage,
        className: withBaseName("arrowButton"),
        children: /* @__PURE__ */ jsx(PreviousIcon, { "aria-hidden": true })
      }
    ),
    children ? children : /* @__PURE__ */ jsx(PageButton, { page, disabled: true }),
    /* @__PURE__ */ jsx(Text, { as: "span", variant: "secondary", children: "of" }),
    /* @__PURE__ */ jsx(PageButton, { page: count, disabled: isOnLastPage }),
    /* @__PURE__ */ jsx(
      Button,
      {
        appearance: "transparent",
        "aria-label": "Next Page",
        onClick: onNextPage,
        disabled: isOnLastPage,
        className: withBaseName("arrowButton"),
        children: /* @__PURE__ */ jsx(NextIcon, { "aria-hidden": true })
      }
    )
  ] });
});

export { CompactPaginator };
//# sourceMappingURL=CompactPaginator.js.map
