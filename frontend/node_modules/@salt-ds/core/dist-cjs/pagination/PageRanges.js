'use strict';

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var makePrefixer = require('../utils/makePrefixer.js');
require('clsx');
require('../utils/useFloatingUI/useFloatingUI.js');
require('../utils/useId.js');
require('../salt-provider/SaltProvider.js');
require('../viewport/ViewportProvider.js');
var PageButton = require('./PageButton.js');
var usePagination = require('./usePagination.js');
var usePaginationContext = require('./usePaginationContext.js');
var styles = require('@salt-ds/styles');
var window = require('@salt-ds/window');
var PageRanges$1 = require('./PageRanges.css.js');

const withBaseName = makePrefixer.makePrefixer("saltPageRanges");
const Ellipsis = () => {
  return /* @__PURE__ */ jsxRuntime.jsx("div", { className: withBaseName("ellipsis"), children: "\u2026" });
};
const mapRange = (range, fn) => {
  const result = [];
  for (let i = range[0]; i <= range[1]; ++i) {
    result.push(fn(i));
  }
  return result;
};
function PageRanges({
  siblingCount = 2,
  boundaryCount = 1
}) {
  const targetWindow = window.useWindow();
  styles.useComponentCssInjection({
    testId: "salt-page-ranges",
    css: PageRanges$1,
    window: targetWindow
  });
  const { count, page } = usePaginationContext.usePaginationContext();
  const renderPages = React.useCallback(
    (range) => mapRange(range, (i) => /* @__PURE__ */ jsxRuntime.jsx(PageButton.PageButton, { page: i, selected: page === i }, i)),
    [page]
  );
  const [leftPages, middlePages, rightPages] = usePagination.usePagination(
    page,
    count,
    Math.max(1, boundaryCount),
    siblingCount
  );
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, { children: [
    leftPages && /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, { children: [
      renderPages(leftPages),
      /* @__PURE__ */ jsxRuntime.jsx(Ellipsis, {})
    ] }),
    middlePages && renderPages(middlePages),
    rightPages && /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, { children: [
      /* @__PURE__ */ jsxRuntime.jsx(Ellipsis, {}),
      renderPages(rightPages)
    ] })
  ] });
}

exports.PageRanges = PageRanges;
//# sourceMappingURL=PageRanges.js.map
