'use strict';

var jsxRuntime = require('react/jsx-runtime');
var styles = require('@salt-ds/styles');
var window = require('@salt-ds/window');
var clsx = require('clsx');
var React = require('react');
var StatusIndicator = require('../status-indicator/StatusIndicator.js');
var makePrefixer = require('../utils/makePrefixer.js');
require('../utils/useFloatingUI/useFloatingUI.js');
require('../utils/useId.js');
require('../salt-provider/SaltProvider.js');
require('../viewport/ViewportProvider.js');
var Toast$1 = require('./Toast.css.js');

const withBaseName = makePrefixer.makePrefixer("saltToast");
const Toast = React.forwardRef(
  function Toast2(props, ref) {
    const { children, className, status, icon, ...rest } = props;
    const targetWindow = window.useWindow();
    styles.useComponentCssInjection({
      testId: "salt-toast",
      css: Toast$1,
      window: targetWindow
    });
    return /* @__PURE__ */ jsxRuntime.jsxs(
      "div",
      {
        className: clsx.clsx(
          withBaseName(),
          { [withBaseName(status ?? "")]: status },
          className
        ),
        role: "alert",
        ...rest,
        ref,
        children: [
          status && /* @__PURE__ */ jsxRuntime.jsx("div", { className: withBaseName("iconContainer"), children: icon ? icon : /* @__PURE__ */ jsxRuntime.jsx(StatusIndicator.StatusIndicator, { status }) }),
          children
        ]
      }
    );
  }
);

exports.Toast = Toast;
//# sourceMappingURL=Toast.js.map
