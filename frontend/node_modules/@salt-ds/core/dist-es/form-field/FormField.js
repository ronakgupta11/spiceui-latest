import { jsx } from 'react/jsx-runtime';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import { clsx } from 'clsx';
import { forwardRef } from 'react';
import { FormFieldContext } from '../form-field-context/FormFieldContext.js';
import { capitalize } from '../utils/capitalize.js';
import { makePrefixer } from '../utils/makePrefixer.js';
import '../utils/useFloatingUI/useFloatingUI.js';
import { useId } from '../utils/useId.js';
import '../salt-provider/SaltProvider.js';
import '../viewport/ViewportProvider.js';
import css_248z from './FormField.css.js';

const withBaseName = makePrefixer("saltFormField");
const FormField = forwardRef(
  ({
    children,
    className,
    disabled = false,
    id: idProp,
    labelPlacement = "top",
    necessity,
    readOnly = false,
    validationStatus,
    ...restProps
  }, ref) => {
    const targetWindow = useWindow();
    useComponentCssInjection({
      testId: "salt-form-field",
      css: css_248z,
      window: targetWindow
    });
    const formId = useId(idProp);
    const labelId = formId ? `label-${formId}` : void 0;
    const helperTextId = formId ? `helperText-${formId}` : void 0;
    return /* @__PURE__ */ jsx(
      "div",
      {
        ref,
        className: clsx(
          withBaseName(),
          {
            [withBaseName("disabled")]: disabled,
            [withBaseName(`label${capitalize(labelPlacement)}`)]: labelPlacement
          },
          className
        ),
        ...restProps,
        children: /* @__PURE__ */ jsx(
          FormFieldContext.Provider,
          {
            value: {
              a11yProps: {
                "aria-labelledby": labelId,
                "aria-describedby": helperTextId
              },
              disabled,
              necessity,
              readOnly,
              validationStatus
            },
            children
          }
        )
      }
    );
  }
);

export { FormField };
//# sourceMappingURL=FormField.js.map
