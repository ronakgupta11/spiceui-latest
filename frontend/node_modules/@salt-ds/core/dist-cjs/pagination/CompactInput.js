'use strict';

var jsxRuntime = require('react/jsx-runtime');
var clsx = require('clsx');
var React = require('react');
var Input = require('../input/Input.js');
var makePrefixer = require('../utils/makePrefixer.js');
require('../utils/useFloatingUI/useFloatingUI.js');
require('../utils/useId.js');
require('../salt-provider/SaltProvider.js');
require('../viewport/ViewportProvider.js');
var usePaginationContext = require('./usePaginationContext.js');
var styles = require('@salt-ds/styles');
var window = require('@salt-ds/window');
var CompactInput$1 = require('./CompactInput.css.js');

const withBaseName = makePrefixer.makePrefixer("saltCompactInput");
const CompactInput = React.forwardRef(function CompactInput2(props, ref) {
  const targetWindow = window.useWindow();
  styles.useComponentCssInjection({
    testId: "salt-compact-input",
    css: CompactInput$1,
    window: targetWindow
  });
  const { count, page, onPageChange } = usePaginationContext.usePaginationContext();
  const [inputValue, setInputValue] = React.useState(`${page}`);
  React.useEffect(() => {
    setInputValue(`${page}`);
  }, [page]);
  const handleChange = (event) => {
    setInputValue(event.target.value);
  };
  const handleKeyDown = (event) => {
    if (event.key === "Enter") {
      const pageValue = Number(inputValue);
      if (!Number.isNaN(pageValue) && pageValue <= count && pageValue > 0) {
        onPageChange(event, pageValue);
      } else {
        setInputValue(`${page}`);
      }
    }
  };
  const handleBlur = () => {
    setInputValue(`${page}`);
  };
  return /* @__PURE__ */ jsxRuntime.jsx(
    Input.Input,
    {
      className: clsx.clsx(withBaseName(), {
        [withBaseName("defaultSize")]: count < 100
      }),
      inputProps: {
        "aria-label": `Go to page, ${count} total`,
        style: { width: `${`${count}`.length}ch` }
      },
      onBlur: handleBlur,
      onChange: handleChange,
      onKeyDown: handleKeyDown,
      value: inputValue,
      textAlign: "center",
      ref,
      ...props
    }
  );
});

exports.CompactInput = CompactInput;
//# sourceMappingURL=CompactInput.js.map
