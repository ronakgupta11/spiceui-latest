import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { useCallback } from 'react';
import { makePrefixer } from '../utils/makePrefixer.js';
import 'clsx';
import '../utils/useFloatingUI/useFloatingUI.js';
import '../utils/useId.js';
import '../salt-provider/SaltProvider.js';
import '../viewport/ViewportProvider.js';
import { PageButton } from './PageButton.js';
import { usePagination } from './usePagination.js';
import { usePaginationContext } from './usePaginationContext.js';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import css_248z from './PageRanges.css.js';

const withBaseName = makePrefixer("saltPageRanges");
const Ellipsis = () => {
  return /* @__PURE__ */ jsx("div", { className: withBaseName("ellipsis"), children: "\u2026" });
};
const mapRange = (range, fn) => {
  const result = [];
  for (let i = range[0]; i <= range[1]; ++i) {
    result.push(fn(i));
  }
  return result;
};
function PageRanges({
  siblingCount = 2,
  boundaryCount = 1
}) {
  const targetWindow = useWindow();
  useComponentCssInjection({
    testId: "salt-page-ranges",
    css: css_248z,
    window: targetWindow
  });
  const { count, page } = usePaginationContext();
  const renderPages = useCallback(
    (range) => mapRange(range, (i) => /* @__PURE__ */ jsx(PageButton, { page: i, selected: page === i }, i)),
    [page]
  );
  const [leftPages, middlePages, rightPages] = usePagination(
    page,
    count,
    Math.max(1, boundaryCount),
    siblingCount
  );
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    leftPages && /* @__PURE__ */ jsxs(Fragment, { children: [
      renderPages(leftPages),
      /* @__PURE__ */ jsx(Ellipsis, {})
    ] }),
    middlePages && renderPages(middlePages),
    rightPages && /* @__PURE__ */ jsxs(Fragment, { children: [
      /* @__PURE__ */ jsx(Ellipsis, {}),
      renderPages(rightPages)
    ] })
  ] });
}

export { PageRanges };
//# sourceMappingURL=PageRanges.js.map
