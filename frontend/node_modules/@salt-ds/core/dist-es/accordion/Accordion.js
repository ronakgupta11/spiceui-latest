import { jsx } from 'react/jsx-runtime';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import { clsx } from 'clsx';
import { forwardRef, useState } from 'react';
import { makePrefixer } from '../utils/makePrefixer.js';
import { useControlled } from '../utils/useControlled.js';
import '../utils/useFloatingUI/useFloatingUI.js';
import { useId } from '../utils/useId.js';
import '../salt-provider/SaltProvider.js';
import '../viewport/ViewportProvider.js';
import css_248z from './Accordion.css.js';
import { AccordionContext } from './AccordionContext.js';

const withBaseName = makePrefixer("saltAccordion");
const Accordion = forwardRef(
  function Accordion2(props, ref) {
    const {
      className,
      defaultExpanded,
      expanded: expandedProp,
      disabled,
      indicatorSide = "left",
      id: idProp,
      onToggle,
      status,
      value,
      ...rest
    } = props;
    const id = useId(idProp);
    const [headerId, setHeaderId] = useState(`${id}-header`);
    const [panelId, setPanelId] = useState(`${id}-panel`);
    const targetWindow = useWindow();
    useComponentCssInjection({
      testId: "salt-accordion",
      css: css_248z,
      window: targetWindow
    });
    const [expanded, setExpanded] = useControlled({
      controlled: expandedProp,
      default: Boolean(defaultExpanded),
      name: "Accordion",
      state: "expanded"
    });
    const toggle = (event) => {
      setExpanded((prev) => !prev);
      onToggle == null ? void 0 : onToggle(event);
    };
    return /* @__PURE__ */ jsx(
      AccordionContext.Provider,
      {
        value: {
          value,
          toggle,
          expanded,
          indicatorSide,
          disabled: Boolean(disabled),
          headerId,
          setHeaderId,
          panelId,
          setPanelId,
          status
        },
        children: /* @__PURE__ */ jsx(
          "div",
          {
            ref,
            className: clsx(
              withBaseName(),
              {
                [withBaseName(status ?? "")]: status,
                [withBaseName("disabled")]: disabled
              },
              className
            ),
            ...rest
          }
        )
      }
    );
  }
);

export { Accordion };
//# sourceMappingURL=Accordion.js.map
