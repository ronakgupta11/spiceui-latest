import { jsxs, jsx } from 'react/jsx-runtime';
import clsx from 'clsx';
import '../form-field-context/FormFieldContext.js';
import { useFormFieldProps } from '../form-field-context/useFormFieldProps.js';
import { StatusIndicator } from '../status-indicator/StatusIndicator.js';
import { Text } from '../text/Text.js';
import '../text/Code.js';
import '../text/Display.js';
import '../text/Headings.js';
import '../text/Label.js';
import '../text/TextAction.js';
import '../text/TextNotation.js';
import 'react';
import { makePrefixer } from '../utils/makePrefixer.js';
import '../utils/useFloatingUI/useFloatingUI.js';
import '../utils/useId.js';
import '../salt-provider/SaltProvider.js';
import '../viewport/ViewportProvider.js';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import css_248z from './FormFieldHelperText.css.js';

const withBaseName = makePrefixer("saltFormFieldHelperText");
const FormFieldHelperText = ({
  className,
  children,
  ...restProps
}) => {
  const targetWindow = useWindow();
  useComponentCssInjection({
    testId: "salt-form-field-helper-text",
    css: css_248z,
    window: targetWindow
  });
  const { a11yProps, disabled, readOnly, validationStatus } = useFormFieldProps();
  return /* @__PURE__ */ jsxs(
    "div",
    {
      className: clsx(
        withBaseName(),
        { [withBaseName("withValidation")]: validationStatus },
        className
      ),
      children: [
        !disabled && !readOnly && validationStatus && /* @__PURE__ */ jsx(StatusIndicator, { status: validationStatus }),
        /* @__PURE__ */ jsx(
          Text,
          {
            disabled,
            id: a11yProps == null ? void 0 : a11yProps["aria-describedby"],
            styleAs: "label",
            color: validationStatus ?? "secondary",
            ...restProps,
            children
          }
        )
      ]
    }
  );
};

export { FormFieldHelperText };
//# sourceMappingURL=FormFieldHelperText.js.map
