'use strict';

var jsxRuntime = require('react/jsx-runtime');
var clsx = require('clsx');
var React = require('react');
var makePrefixer = require('../utils/makePrefixer.js');
require('../utils/useFloatingUI/useFloatingUI.js');
require('../utils/useId.js');
require('../salt-provider/SaltProvider.js');
require('../viewport/ViewportProvider.js');
var usePaginationContext = require('./usePaginationContext.js');
var styles = require('@salt-ds/styles');
var window = require('@salt-ds/window');
var PageButton$1 = require('./PageButton.css.js');

const withBaseName = makePrefixer.makePrefixer("saltPageButton");
const PageButton = React.forwardRef(
  function PageButton2({ page, selected, disabled }, ref) {
    const targetWindow = window.useWindow();
    styles.useComponentCssInjection({
      testId: "salt-page-button",
      css: PageButton$1,
      window: targetWindow
    });
    const { count, onPageChange } = usePaginationContext.usePaginationContext();
    const onClick = (event) => {
      onPageChange(event, page);
    };
    return /* @__PURE__ */ jsxRuntime.jsx(
      "button",
      {
        "aria-label": `Page ${page} of ${count}`,
        "aria-current": selected ? "page" : void 0,
        className: clsx.clsx(withBaseName(), {
          [withBaseName("selected")]: selected,
          [withBaseName("fixed")]: page < 100
        }),
        onClick,
        disabled,
        ref,
        type: "button",
        children: page
      }
    );
  }
);

exports.PageButton = PageButton;
//# sourceMappingURL=PageButton.js.map
