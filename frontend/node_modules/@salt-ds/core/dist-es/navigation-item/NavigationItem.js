import { jsx, jsxs } from 'react/jsx-runtime';
import { clsx } from 'clsx';
import { forwardRef } from 'react';
import { makePrefixer } from '../utils/makePrefixer.js';
import '../utils/useFloatingUI/useFloatingUI.js';
import '../utils/useId.js';
import '../salt-provider/SaltProvider.js';
import '../viewport/ViewportProvider.js';
import { ExpansionIcon } from './ExpansionIcon.js';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import css_248z from './NavigationItem.css.js';
import { NavigationItemAction } from './NavigationItemAction.js';

const withBaseName = makePrefixer("saltNavigationItem");
const NavigationItem = forwardRef(
  function NavigationItem2(props, ref) {
    const {
      active,
      blurActive,
      render,
      children,
      className,
      expanded = false,
      href,
      orientation = "horizontal",
      parent,
      level = 0,
      onExpand,
      style: styleProp,
      ...rest
    } = props;
    const targetWindow = useWindow();
    useComponentCssInjection({
      testId: "salt-navigation-item",
      css: css_248z,
      window: targetWindow
    });
    const style = {
      ...styleProp,
      "--saltNavigationItem-level": `${level}`
    };
    const isLink = href !== void 0;
    const handleClick = (event) => {
      onExpand == null ? void 0 : onExpand(event);
    };
    return /* @__PURE__ */ jsx(
      "div",
      {
        ref,
        className: clsx(withBaseName(), className),
        style,
        ...rest,
        children: /* @__PURE__ */ jsxs(
          NavigationItemAction,
          {
            className: clsx(
              withBaseName("wrapper"),
              {
                [withBaseName("active")]: active || blurActive,
                [withBaseName("blurActive")]: blurActive,
                [withBaseName("rootItem")]: level === 0
              },
              withBaseName(orientation)
            ),
            render: render ?? (isLink ? void 0 : /* @__PURE__ */ jsx("button", { type: "button" })),
            "aria-expanded": isLink ? void 0 : expanded,
            onClick: handleClick,
            "aria-current": isLink && active ? "page" : void 0,
            href,
            children: [
              /* @__PURE__ */ jsx("span", { className: withBaseName("label"), children }),
              parent ? /* @__PURE__ */ jsx(ExpansionIcon, { expanded, orientation }) : null
            ]
          }
        )
      }
    );
  }
);

export { NavigationItem };
//# sourceMappingURL=NavigationItem.js.map
