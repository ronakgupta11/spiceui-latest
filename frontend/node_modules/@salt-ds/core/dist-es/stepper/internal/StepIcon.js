import { jsx } from 'react/jsx-runtime';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import clsx from 'clsx';
import { useMemo } from 'react';
import { useIcon } from '../../semantic-icon-provider/SemanticIconProvider.js';
import { makePrefixer } from '../../utils/makePrefixer.js';
import '../../utils/useFloatingUI/useFloatingUI.js';
import '../../utils/useId.js';
import '../../salt-provider/SaltProvider.js';
import '../../viewport/ViewportProvider.js';
import css_248z from './StepIcon.css.js';

const withBaseName = makePrefixer("saltStepIcon");
function StepIcon({
  status,
  stage,
  size,
  sizeMultiplier = size || 1.5,
  className,
  ...props
}) {
  const targetWindow = useWindow();
  const IconComponent = useStepIcon({ stage, status });
  useComponentCssInjection({
    testId: "salt-step-icon",
    css: css_248z,
    window: targetWindow
  });
  return /* @__PURE__ */ jsx(
    IconComponent,
    {
      size: sizeMultiplier,
      className: clsx(withBaseName(), className),
      ...props
    }
  );
}
function useStepIcon({
  stage,
  status
}) {
  const icons = useIcon();
  const stateToIcon = useMemo(
    () => ({
      error: icons.ErrorIcon,
      warning: icons.WarningIcon,
      active: icons.ActiveIcon,
      completed: icons.CompletedIcon,
      pending: icons.PendingIcon,
      inprogress: icons.InProgressIcon,
      locked: icons.LockedIcon
    }),
    [icons]
  );
  return stateToIcon[status || stage];
}

export { StepIcon };
//# sourceMappingURL=StepIcon.js.map
