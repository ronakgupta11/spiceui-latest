import { jsx } from 'react/jsx-runtime';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import { clsx } from 'clsx';
import { forwardRef } from 'react';
import { makePrefixer } from '../utils/makePrefixer.js';
import '../utils/useFloatingUI/useFloatingUI.js';
import '../utils/useId.js';
import { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect.js';
import '../salt-provider/SaltProvider.js';
import '../viewport/ViewportProvider.js';
import { useAccordion } from './AccordionContext.js';
import css_248z from './AccordionPanel.css.js';

const withBaseName = makePrefixer("saltAccordionPanel");
const AccordionPanel = forwardRef(
  function AccordionPanel2(props, ref) {
    const { children, className, id, ...rest } = props;
    const targetWindow = useWindow();
    useComponentCssInjection({
      testId: "salt-accordion-panel",
      css: css_248z,
      window: targetWindow
    });
    const { headerId, panelId, setPanelId, expanded, indicatorSide } = useAccordion();
    useIsomorphicLayoutEffect(() => {
      if (id) {
        setPanelId(id);
      }
    }, [id, setPanelId]);
    return /* @__PURE__ */ jsx(
      "div",
      {
        ref,
        className: clsx(withBaseName(), className),
        role: "region",
        id: panelId,
        "aria-labelledby": headerId,
        "aria-hidden": !expanded ? "true" : void 0,
        hidden: !expanded,
        ...rest,
        children: /* @__PURE__ */ jsx("div", { className: withBaseName("inner"), children: /* @__PURE__ */ jsx(
          "div",
          {
            className: clsx(withBaseName("content"), {
              [withBaseName("indentedContent")]: indicatorSide === "left"
            }),
            children
          }
        ) })
      }
    );
  }
);

export { AccordionPanel };
//# sourceMappingURL=AccordionPanel.js.map
