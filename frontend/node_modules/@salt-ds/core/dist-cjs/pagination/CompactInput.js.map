{"version":3,"file":"CompactInput.js","sources":["../src/pagination/CompactInput.tsx"],"sourcesContent":["import { clsx } from \"clsx\";\nimport {\n  type ChangeEventHandler,\n  type KeyboardEventHandler,\n  forwardRef,\n  useEffect,\n  useState,\n} from \"react\";\nimport { Input, type InputProps } from \"../input\";\nimport { makePrefixer } from \"../utils\";\nimport { usePaginationContext } from \"./usePaginationContext\";\n\nimport { useComponentCssInjection } from \"@salt-ds/styles\";\nimport { useWindow } from \"@salt-ds/window\";\n\nimport compactInputCss from \"./CompactInput.css\";\n\nconst withBaseName = makePrefixer(\"saltCompactInput\");\n\nexport const CompactInput = forwardRef<\n  HTMLInputElement,\n  Pick<InputProps, \"inputRef\" | \"variant\">\n>(function CompactInput(props, ref) {\n  const targetWindow = useWindow();\n  useComponentCssInjection({\n    testId: \"salt-compact-input\",\n    css: compactInputCss,\n    window: targetWindow,\n  });\n\n  const { count, page, onPageChange } = usePaginationContext();\n\n  const [inputValue, setInputValue] = useState(`${page}`);\n\n  useEffect(() => {\n    setInputValue(`${page}`);\n  }, [page]);\n\n  const handleChange: ChangeEventHandler<HTMLInputElement> = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleKeyDown: KeyboardEventHandler<HTMLInputElement> = (event) => {\n    if (event.key === \"Enter\") {\n      const pageValue = Number(inputValue);\n      if (!Number.isNaN(pageValue) && pageValue <= count && pageValue > 0) {\n        onPageChange(event, pageValue);\n      } else {\n        setInputValue(`${page}`);\n      }\n    }\n  };\n\n  const handleBlur = () => {\n    setInputValue(`${page}`);\n  };\n\n  return (\n    <Input\n      className={clsx(withBaseName(), {\n        [withBaseName(\"defaultSize\")]: count < 100,\n      })}\n      inputProps={{\n        \"aria-label\": `Go to page, ${count} total`,\n        style: { width: `${`${count}`.length}ch` },\n      }}\n      onBlur={handleBlur}\n      onChange={handleChange}\n      onKeyDown={handleKeyDown}\n      value={inputValue}\n      textAlign={\"center\"}\n      ref={ref}\n      {...props}\n    />\n  );\n});\n"],"names":["makePrefixer","forwardRef","CompactInput","useWindow","useComponentCssInjection","compactInputCss","usePaginationContext","useState","useEffect","jsx","Input","clsx"],"mappings":";;;;;;;;;;;;;;;;AAiBA,MAAM,YAAA,GAAeA,0BAAa,kBAAkB,CAAA;AAE7C,MAAM,YAAe,GAAAC,gBAAA,CAG1B,SAASC,aAAAA,CAAa,OAAO,GAAK,EAAA;AAClC,EAAA,MAAM,eAAeC,gBAAU,EAAA;AAC/B,EAAyBC,+BAAA,CAAA;AAAA,IACvB,MAAQ,EAAA,oBAAA;AAAA,IACR,GAAK,EAAAC,cAAA;AAAA,IACL,MAAQ,EAAA;AAAA,GACT,CAAA;AAED,EAAA,MAAM,EAAE,KAAA,EAAO,IAAM,EAAA,YAAA,KAAiBC,yCAAqB,EAAA;AAE3D,EAAA,MAAM,CAAC,UAAY,EAAA,aAAa,IAAIC,cAAS,CAAA,CAAA,EAAG,IAAI,CAAE,CAAA,CAAA;AAEtD,EAAAC,eAAA,CAAU,MAAM;AACd,IAAc,aAAA,CAAA,CAAA,EAAG,IAAI,CAAE,CAAA,CAAA;AAAA,GACzB,EAAG,CAAC,IAAI,CAAC,CAAA;AAET,EAAM,MAAA,YAAA,GAAqD,CAAC,KAAU,KAAA;AACpE,IAAc,aAAA,CAAA,KAAA,CAAM,OAAO,KAAK,CAAA;AAAA,GAClC;AAEA,EAAM,MAAA,aAAA,GAAwD,CAAC,KAAU,KAAA;AACvE,IAAI,IAAA,KAAA,CAAM,QAAQ,OAAS,EAAA;AACzB,MAAM,MAAA,SAAA,GAAY,OAAO,UAAU,CAAA;AACnC,MAAI,IAAA,CAAC,OAAO,KAAM,CAAA,SAAS,KAAK,SAAa,IAAA,KAAA,IAAS,YAAY,CAAG,EAAA;AACnE,QAAA,YAAA,CAAa,OAAO,SAAS,CAAA;AAAA,OACxB,MAAA;AACL,QAAc,aAAA,CAAA,CAAA,EAAG,IAAI,CAAE,CAAA,CAAA;AAAA;AACzB;AACF,GACF;AAEA,EAAA,MAAM,aAAa,MAAM;AACvB,IAAc,aAAA,CAAA,CAAA,EAAG,IAAI,CAAE,CAAA,CAAA;AAAA,GACzB;AAEA,EACE,uBAAAC,cAAA;AAAA,IAACC,WAAA;AAAA,IAAA;AAAA,MACC,SAAA,EAAWC,SAAK,CAAA,YAAA,EAAgB,EAAA;AAAA,QAC9B,CAAC,YAAA,CAAa,aAAa,CAAC,GAAG,KAAQ,GAAA;AAAA,OACxC,CAAA;AAAA,MACD,UAAY,EAAA;AAAA,QACV,YAAA,EAAc,eAAe,KAAK,CAAA,MAAA,CAAA;AAAA,QAClC,KAAA,EAAO,EAAE,KAAO,EAAA,CAAA,EAAG,GAAG,KAAK,CAAA,CAAA,CAAG,MAAM,CAAK,EAAA,CAAA;AAAA,OAC3C;AAAA,MACA,MAAQ,EAAA,UAAA;AAAA,MACR,QAAU,EAAA,YAAA;AAAA,MACV,SAAW,EAAA,aAAA;AAAA,MACX,KAAO,EAAA,UAAA;AAAA,MACP,SAAW,EAAA,QAAA;AAAA,MACX,GAAA;AAAA,MACC,GAAG;AAAA;AAAA,GACN;AAEJ,CAAC;;;;"}