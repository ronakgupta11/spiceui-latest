import { jsxs, jsx } from 'react/jsx-runtime';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import { clsx } from 'clsx';
import { forwardRef } from 'react';
import { useIcon } from '../semantic-icon-provider/SemanticIconProvider.js';
import { StatusIndicator } from '../status-indicator/StatusIndicator.js';
import { makePrefixer } from '../utils/makePrefixer.js';
import '../utils/useFloatingUI/useFloatingUI.js';
import '../utils/useId.js';
import { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect.js';
import '../salt-provider/SaltProvider.js';
import '../viewport/ViewportProvider.js';
import { useAccordion } from './AccordionContext.js';
import css_248z from './AccordionHeader.css.js';

const withBaseName = makePrefixer("saltAccordionHeader");
function ExpansionIcon({ expanded }) {
  const { CollapseIcon, ExpandIcon } = useIcon();
  if (expanded) {
    return /* @__PURE__ */ jsx(CollapseIcon, { "aria-hidden": true, className: withBaseName("icon") });
  }
  return /* @__PURE__ */ jsx(ExpandIcon, { "aria-hidden": true, className: withBaseName("icon") });
}
const AccordionHeader = forwardRef(function AccordionHeader2(props, ref) {
  const { children, className, onClick, id, ...rest } = props;
  const {
    value,
    expanded,
    toggle,
    indicatorSide,
    disabled,
    headerId,
    panelId,
    setHeaderId,
    status
  } = useAccordion();
  const targetWindow = useWindow();
  useComponentCssInjection({
    testId: "salt-accordion-header",
    css: css_248z,
    window: targetWindow
  });
  const handleClick = (event) => {
    toggle(event);
    onClick == null ? void 0 : onClick(event);
  };
  useIsomorphicLayoutEffect(() => {
    if (id) {
      setHeaderId(id);
    }
  }, [id, setHeaderId]);
  return /* @__PURE__ */ jsxs(
    "button",
    {
      ref,
      className: clsx(
        withBaseName(),
        { [withBaseName(status ?? "")]: status },
        className
      ),
      disabled,
      onClick: handleClick,
      "aria-expanded": expanded,
      id: headerId,
      "aria-controls": panelId,
      value,
      type: "button",
      ...rest,
      children: [
        indicatorSide === "left" && /* @__PURE__ */ jsx(ExpansionIcon, { expanded }),
        /* @__PURE__ */ jsx("span", { className: withBaseName("content"), children }),
        status && !disabled && /* @__PURE__ */ jsx(
          StatusIndicator,
          {
            className: withBaseName("statusIndicator"),
            status
          }
        ),
        indicatorSide === "right" && /* @__PURE__ */ jsx(ExpansionIcon, { expanded })
      ]
    }
  );
});

export { AccordionHeader };
//# sourceMappingURL=AccordionHeader.js.map
