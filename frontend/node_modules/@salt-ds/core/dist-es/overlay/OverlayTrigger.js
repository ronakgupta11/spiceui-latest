import { jsx, Fragment } from 'react/jsx-runtime';
import { isValidElement, cloneElement } from 'react';
import { mergeProps } from '../utils/mergeProps.js';
import '../utils/useFloatingUI/useFloatingUI.js';
import { useForkRef } from '../utils/useForkRef.js';
import '../utils/useId.js';
import '../salt-provider/SaltProvider.js';
import '../viewport/ViewportProvider.js';
import { getRefFromChildren } from '../utils/getRefFromChildren.js';
import { useOverlayContext } from './OverlayContext.js';

function OverlayTrigger(props) {
  const { children } = props;
  const { reference, getReferenceProps } = useOverlayContext();
  const triggerRef = useForkRef(getRefFromChildren(children), reference);
  if (!children || !isValidElement(children)) {
    return /* @__PURE__ */ jsx(Fragment, { children });
  }
  return /* @__PURE__ */ jsx(Fragment, { children: cloneElement(children, {
    ...mergeProps(getReferenceProps(), children.props),
    ref: triggerRef
  }) });
}

export { OverlayTrigger };
//# sourceMappingURL=OverlayTrigger.js.map
