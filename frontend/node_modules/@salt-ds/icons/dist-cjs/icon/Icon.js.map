{"version":3,"file":"Icon.js","sources":["../src/icon/Icon.tsx"],"sourcesContent":["import { clsx } from \"clsx\";\nimport { type SVGAttributes, forwardRef } from \"react\";\n\nimport { useComponentCssInjection } from \"@salt-ds/styles\";\nimport { useWindow } from \"@salt-ds/window\";\n\nimport iconCss from \"./Icon.css\";\n// Duplicate from core/util to avoid circular dependency\nexport const makePrefixer =\n  (prefix: string): ((...names: string[]) => string) =>\n  (...names: string[]): string =>\n    [prefix, ...names].join(\"-\");\n\nconst withBaseName = makePrefixer(\"saltIcon\");\n\nexport interface IconProps extends SVGAttributes<SVGSVGElement> {\n  /*\n   * The color of the icon. Defaults to \"inherit\".\n   */\n  color?: \"inherit\" | \"primary\" | \"secondary\";\n  /**\n   * Multiplier for the base icon size. Should be a positive integer to conform to the rest of the design system.\n   */\n  size?: number;\n}\n\nexport const DEFAULT_ICON_SIZE = 1;\n\nexport const Icon = forwardRef<SVGSVGElement, IconProps>(function Icon(\n  {\n    \"aria-hidden\": ariaHidden,\n    \"aria-label\": ariaLabel,\n    children,\n    className,\n    color = \"inherit\",\n    size = DEFAULT_ICON_SIZE,\n    style: styleProp,\n    ...rest\n  },\n  ref,\n) {\n  const targetWindow = useWindow();\n  useComponentCssInjection({\n    testId: \"salt-icon\",\n    css: iconCss,\n    window: targetWindow,\n  });\n\n  const style = {\n    ...styleProp,\n    \"--saltIcon-size-multiplier\": `${size}`,\n  };\n\n  return (\n    <svg\n      className={clsx(\n        withBaseName(),\n        { [withBaseName(color)]: color !== \"inherit\" },\n        className,\n      )}\n      style={style}\n      // Workaround to fix aria labels being announced even when aria-hidden is set to true on iOS.\n      role={ariaHidden ? undefined : \"img\"}\n      aria-label={ariaHidden ? undefined : ariaLabel}\n      aria-hidden={ariaHidden}\n      {...rest}\n      ref={ref}\n    >\n      <g aria-hidden>{children}</g>\n    </svg>\n  );\n});\n"],"names":["forwardRef","Icon","useWindow","useComponentCssInjection","iconCss","jsx","clsx"],"mappings":";;;;;;;;;AAQa,MAAA,YAAA,GACX,CAAC,MAAA,KACD,CAAI,GAAA,KAAA,KACF,CAAC,MAAA,EAAQ,GAAG,KAAK,CAAE,CAAA,IAAA,CAAK,GAAG;AAE/B,MAAM,YAAA,GAAe,aAAa,UAAU,CAAA;AAarC,MAAM,iBAAoB,GAAA;AAEpB,MAAA,IAAA,GAAOA,gBAAqC,CAAA,SAASC,KAChE,CAAA;AAAA,EACE,aAAe,EAAA,UAAA;AAAA,EACf,YAAc,EAAA,SAAA;AAAA,EACd,QAAA;AAAA,EACA,SAAA;AAAA,EACA,KAAQ,GAAA,SAAA;AAAA,EACR,IAAO,GAAA,iBAAA;AAAA,EACP,KAAO,EAAA,SAAA;AAAA,EACP,GAAG;AACL,CAAA,EACA,GACA,EAAA;AACA,EAAA,MAAM,eAAeC,gBAAU,EAAA;AAC/B,EAAyBC,+BAAA,CAAA;AAAA,IACvB,MAAQ,EAAA,WAAA;AAAA,IACR,GAAK,EAAAC,MAAA;AAAA,IACL,MAAQ,EAAA;AAAA,GACT,CAAA;AAED,EAAA,MAAM,KAAQ,GAAA;AAAA,IACZ,GAAG,SAAA;AAAA,IACH,4BAAA,EAA8B,GAAG,IAAI,CAAA;AAAA,GACvC;AAEA,EACE,uBAAAC,cAAA;AAAA,IAAC,KAAA;AAAA,IAAA;AAAA,MACC,SAAW,EAAAC,SAAA;AAAA,QACT,YAAa,EAAA;AAAA,QACb,EAAE,CAAC,YAAA,CAAa,KAAK,CAAC,GAAG,UAAU,SAAU,EAAA;AAAA,QAC7C;AAAA,OACF;AAAA,MACA,KAAA;AAAA,MAEA,IAAA,EAAM,aAAa,KAAY,CAAA,GAAA,KAAA;AAAA,MAC/B,YAAA,EAAY,aAAa,KAAY,CAAA,GAAA,SAAA;AAAA,MACrC,aAAa,EAAA,UAAA;AAAA,MACZ,GAAG,IAAA;AAAA,MACJ,GAAA;AAAA,MAEA,QAAC,kBAAAD,cAAA,CAAA,GAAA,EAAA,EAAE,aAAW,EAAA,IAAA,EAAE,QAAS,EAAA;AAAA;AAAA,GAC3B;AAEJ,CAAC;;;;;;"}