{
  "component_name": "Tag",
  "metadata": {
    "component_name": "Tag",
    "description": "Tags communicate metadata that categorizes or groups content in an application. They are read-only, do not interfere with page interactions, and use categorical colors to draw attention. Tags appear as stylized elements with text, sometimes accompanied by an icon to reinforce their meaning.",
    "props": {
      "bordered": {
        "type": "boolean",
        "required": false,
        "description": "Styling variant with full border. Defaults to false"
      },
      "variant": {
        "type": "enum",
        "required": false,
        "description": "Emphasize the styling by applying a background color. Defaults to primary",
        "defaultValue": "primary"
      },
      "category": {
        "type": "number",
        "required": false,
        "description": "The tag category, needs to be within range of 1-20. Defaults to 1",
        "defaultValue": "1"
      }
    },
    "examples": [
      {
        "name": "Bordered",
        "description": "To add a border to tag, simply pass the `bordered` prop to the component.\n\nSecondary tags have the ability to theme the border, although the border is not visible by default in the Salt theme.",
        "code": "import { FlowLayout, Tag } from \"@salt-ds/core\";\nimport type { ReactElement } from \"react\";\n\nexport const Bordered = (): ReactElement => (\n  <FlowLayout>\n    <Tag bordered>Primary</Tag>\n    <Tag>Primary</Tag>\n  </FlowLayout>\n);\n"
      },
      {
        "name": "Categories",
        "description": "To differentiate between different categories, set a category by passing a value from 1 to 20 to the `category` prop.\n\nNote that if a category outside the range is passed, the styles will default to category 1.\n\n#",
        "code": "import { GridLayout, StackLayout, Tag } from \"@salt-ds/core\";\nimport type { ReactElement } from \"react\";\n\nexport const Categories = (): ReactElement => (\n  <StackLayout direction=\"row\" gap={4}>\n    <GridLayout columns={3} gap={2}>\n      <Tag>Cat-1</Tag>\n      <Tag bordered>Cat-1</Tag>\n      <Tag variant=\"secondary\">Cat-1</Tag>\n      <Tag category={2}>Cat-2</Tag>\n      <Tag bordered category={2}>\n        Cat-2\n      </Tag>\n      <Tag variant=\"secondary\" category={2}>\n        Cat-2\n      </Tag>\n      <Tag category={3}>Cat-3</Tag>\n      <Tag bordered category={3}>\n        Cat-3\n      </Tag>\n      <Tag variant=\"secondary\" category={3}>\n        Cat-3\n      </Tag>\n      <Tag category={4}>Cat-4</Tag>\n      <Tag bordered category={4}>\n        Cat-4\n      </Tag>\n      <Tag variant=\"secondary\" category={4}>\n        Cat-4\n      </Tag>\n      <Tag category={5}>Cat-5</Tag>\n      <Tag bordered category={5}>\n        Cat-5\n      </Tag>\n      <Tag variant=\"secondary\" category={5}>\n        Cat-5\n      </Tag>\n      <Tag category={6}>Cat-6</Tag>\n      <Tag bordered category={6}>\n        Cat-6\n      </Tag>\n      <Tag variant=\"secondary\" category={6}>\n        Cat-6\n      </Tag>\n      <Tag category={7}>Cat-7</Tag>\n      <Tag bordered category={7}>\n        Cat-7\n      </Tag>\n      <Tag variant=\"secondary\" category={7}>\n        Cat-7\n      </Tag>\n      <Tag category={8}>Cat-8</Tag>\n      <Tag bordered category={8}>\n        Cat-8\n      </Tag>\n      <Tag variant=\"secondary\" category={8}>\n        Cat-8\n      </Tag>\n      <Tag category={9}>Cat-9</Tag>\n      <Tag bordered category={9}>\n        Cat-9\n      </Tag>\n      <Tag variant=\"secondary\" category={9}>\n        Cat-9\n      </Tag>\n      <Tag category={10}>Cat-10</Tag>\n      <Tag bordered category={10}>\n        Cat-10\n      </Tag>\n      <Tag variant=\"secondary\" category={10}>\n        Cat-10\n      </Tag>\n    </GridLayout>\n    <GridLayout columns={{ xs: 2, sm: 4, lg: 3 }} gap={2}>\n      <Tag category={11}>Cat-11</Tag>\n      <Tag bordered category={11}>\n        Cat-11\n      </Tag>\n      <Tag variant=\"secondary\" category={11}>\n        Cat-11\n      </Tag>\n      <Tag category={12}>Cat-12</Tag>\n      <Tag bordered category={12}>\n        Cat-12\n      </Tag>\n      <Tag variant=\"secondary\" category={12}>\n        Cat-12\n      </Tag>\n      <Tag category={13}>Cat-13</Tag>\n      <Tag bordered category={13}>\n        Cat-13\n      </Tag>\n      <Tag variant=\"secondary\" category={13}>\n        Cat-13\n      </Tag>\n      <Tag category={14}>Cat-14</Tag>\n      <Tag bordered category={14}>\n        Cat-14\n      </Tag>\n      <Tag variant=\"secondary\" category={14}>\n        Cat-14\n      </Tag>\n      <Tag category={15}>Cat-15</Tag>\n      <Tag bordered category={15}>\n        Cat-15\n      </Tag>\n      <Tag variant=\"secondary\" category={15}>\n        Cat-15\n      </Tag>\n      <Tag category={16}>Cat-16</Tag>\n      <Tag bordered category={16}>\n        Cat-16\n      </Tag>\n      <Tag variant=\"secondary\" category={16}>\n        Cat-16\n      </Tag>\n      <Tag category={17}>Cat-17</Tag>\n      <Tag bordered category={17}>\n        Cat-17\n      </Tag>\n      <Tag variant=\"secondary\" category={17}>\n        Cat-17\n      </Tag>\n      <Tag category={18}>Cat-18</Tag>\n      <Tag bordered category={18}>\n        Cat-18\n      </Tag>\n      <Tag variant=\"secondary\" category={18}>\n        Cat-18\n      </Tag>\n      <Tag category={19}>Cat-19</Tag>\n      <Tag bordered category={19}>\n        Cat-19\n      </Tag>\n      <Tag variant=\"secondary\" category={19}>\n        Cat-19\n      </Tag>\n      <Tag category={20}>Cat-20</Tag>\n      <Tag bordered category={20}>\n        Cat-20\n      </Tag>\n      <Tag variant=\"secondary\" category={20}>\n        Cat-20\n      </Tag>\n    </GridLayout>\n  </StackLayout>\n);\n"
      },
      {
        "name": "TagInCard",
        "description": "",
        "code": "import { Card, FlexLayout, H3, StackLayout, Tag, Text } from \"@salt-ds/core\";\nimport type { ReactElement } from \"react\";\nimport styles from \"./index.module.css\";\n\nexport const TagInCard = (): ReactElement => (\n  <Card\n    className={styles.category3}\n    style={{\n      width: 315,\n    }}\n    accent=\"top\"\n  >\n    <StackLayout>\n      <StackLayout gap={1}>\n        <H3>\n          <strong>Bond Performance</strong>\n        </H3>\n        <Text>\n          A snapshot of your bond investments: market value, yield, maturity\n          dates, real-time interest rate changes, and credit ratings.\n        </Text>\n      </StackLayout>\n      <FlexLayout direction=\"row\" justify=\"end\" gap={1}>\n        <Tag category={4}>Coming soon</Tag>\n        <Tag variant=\"secondary\" category={3}>\n          Bonds\n        </Tag>\n      </FlexLayout>\n    </StackLayout>\n  </Card>\n);\n"
      },
      {
        "name": "Variants",
        "description": "Tag has two variants: primary and secondary. The primary variant is set by default. Set to secondary with `variant=”secondary”`.",
        "code": "import { FlowLayout, Tag } from \"@salt-ds/core\";\nimport type { ReactElement } from \"react\";\n\nexport const Variants = (): ReactElement => (\n  <FlowLayout>\n    <Tag>Primary</Tag>\n    <Tag variant=\"secondary\">Secondary</Tag>\n  </FlowLayout>\n);\n"
      },
      {
        "name": "WithIcon",
        "description": "",
        "code": "import { FlowLayout, Tag } from \"@salt-ds/core\";\nimport { ClockIcon, LineChartIcon } from \"@salt-ds/icons\";\nimport type { ReactElement } from \"react\";\n\nexport const WithIcon = (): ReactElement => (\n  <FlowLayout>\n    <Tag>\n      <LineChartIcon />\n      Data\n    </Tag>\n    <Tag variant=\"secondary\">\n      <ClockIcon /> Coming soon\n    </Tag>\n  </FlowLayout>\n);\n"
      }
    ],
    "category": "@salt-ds/core",
    "tags": [],
    "when_to_use": [
      "For displaying categories in a catalogue or within a group.",
      "To display non-interactive data on a page."
    ],
    "when_not_to_use": [
      "For quick filtering and selection, use [`Pill`](/salt/components/pill). Tags and Pills both categorize content in an app, but while Tags are read-only and simply display metadata, Pills are interactive and allow users to filter or sort content.",
      "To display counts, notifications or if you need a small, compact piece of information to be displayed inline, for example ‘New’. Instead, use [`Badge`](/salt/components/badge)."
    ],
    "import_statement": "",
    "source_code_url": "https://github.com/jpmorganchase/salt-ds/blob/main/packages/core/src/tag",
    "related_components": [
      {
        "name": "Pill",
        "relationship": "similarTo"
      },
      {
        "name": "Badge",
        "relationship": "similarTo"
      }
    ]
  }
}