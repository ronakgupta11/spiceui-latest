import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { FloatingArrow } from '@floating-ui/react';
import '../form-field-context/FormFieldContext.js';
import { useFormFieldProps } from '../form-field-context/useFormFieldProps.js';
import { StatusIndicator } from '../status-indicator/StatusIndicator.js';
import 'react';
import { makePrefixer } from '../utils/makePrefixer.js';
import 'clsx';
import '../utils/useFloatingUI/useFloatingUI.js';
import '../utils/useId.js';
import '../salt-provider/SaltProvider.js';
import '../viewport/ViewportProvider.js';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import css_248z from './Tooltip.css.js';

const withBaseName = makePrefixer("saltTooltip");
const TooltipBase = (props) => {
  const targetWindow = useWindow();
  useComponentCssInjection({
    testId: "salt-tooltip",
    css: css_248z,
    window: targetWindow
  });
  const { a11yProps } = useFormFieldProps();
  const { arrowProps, content, hideArrow, hideIcon, status } = props;
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    /* @__PURE__ */ jsxs("div", { className: withBaseName("container"), children: [
      !hideIcon && status && /* @__PURE__ */ jsx(
        StatusIndicator,
        {
          status,
          size: 1,
          className: withBaseName("icon")
        }
      ),
      /* @__PURE__ */ jsx(
        "span",
        {
          id: a11yProps == null ? void 0 : a11yProps["aria-describedby"],
          className: withBaseName("content"),
          children: content
        }
      )
    ] }),
    !hideArrow && /* @__PURE__ */ jsx(
      FloatingArrow,
      {
        ...arrowProps,
        className: withBaseName("arrow"),
        strokeWidth: 1,
        fill: "var(--salt-container-primary-background)",
        stroke: "var(--tooltip-status-borderColor)",
        height: 5,
        width: 10
      }
    )
  ] });
};

export { TooltipBase };
//# sourceMappingURL=TooltipBase.js.map
