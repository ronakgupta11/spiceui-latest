import { jsx } from 'react/jsx-runtime';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import { clsx } from 'clsx';
import { forwardRef } from 'react';
import { useBreakpoint } from '../breakpoints/BreakpointProvider.js';
import { parseSpacing } from '../flex-layout/parseSpacing.js';
import { makePrefixer } from '../utils/makePrefixer.js';
import '../utils/useFloatingUI/useFloatingUI.js';
import '../utils/useId.js';
import { resolveResponsiveValue } from '../utils/useResponsiveProp.js';
import css_248z from './FlexItem.css.js';

const withBaseName = makePrefixer("saltFlexItem");
const FLEX_ITEM_ALIGNMENTS = [
  "start",
  "end",
  "center",
  "stretch"
];
const FlexItem = forwardRef(
  ({
    as,
    align,
    children,
    className,
    margin = 0,
    padding = 0,
    shrink,
    grow,
    basis,
    style,
    ...rest
  }, ref) => {
    const targetWindow = useWindow();
    useComponentCssInjection({
      testId: "salt-flex-item",
      css: css_248z,
      window: targetWindow
    });
    const { matchedBreakpoints } = useBreakpoint();
    const Component = as || "div";
    const flexItemShrink = resolveResponsiveValue(shrink, matchedBreakpoints);
    const flexItemGrow = resolveResponsiveValue(grow, matchedBreakpoints);
    const flexItemBasis = resolveResponsiveValue(basis, matchedBreakpoints);
    const flexItemMargin = resolveResponsiveValue(margin, matchedBreakpoints);
    const flexItemPadding = resolveResponsiveValue(padding, matchedBreakpoints);
    const itemStyle = {
      "--flexItem-margin": parseSpacing(flexItemMargin),
      "--flexItem-padding": parseSpacing(flexItemPadding),
      "--saltFlexItem-alignment": align,
      "--saltFlexItem-shrink": flexItemShrink,
      "--saltFlexItem-grow": flexItemGrow,
      "--saltFlexItem-basis": flexItemBasis,
      ...style
    };
    return /* @__PURE__ */ jsx(
      Component,
      {
        className: clsx(withBaseName(), className),
        ref,
        style: itemStyle,
        ...rest,
        children
      }
    );
  }
);

export { FLEX_ITEM_ALIGNMENTS, FlexItem };
//# sourceMappingURL=FlexItem.js.map
