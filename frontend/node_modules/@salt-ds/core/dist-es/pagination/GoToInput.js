import { jsxs, jsx } from 'react/jsx-runtime';
import { clsx } from 'clsx';
import { forwardRef, useState } from 'react';
import { FormField } from '../form-field/FormField.js';
import '../form-field-context/FormFieldContext.js';
import '../status-indicator/StatusIndicator.js';
import '../text/Text.js';
import '../text/Code.js';
import '../text/Display.js';
import '../text/Headings.js';
import '../text/Label.js';
import '../text/TextAction.js';
import '../text/TextNotation.js';
import { makePrefixer } from '../utils/makePrefixer.js';
import '../utils/useFloatingUI/useFloatingUI.js';
import '../utils/useId.js';
import '../salt-provider/SaltProvider.js';
import '../viewport/ViewportProvider.js';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import { FormFieldLabel } from '../form-field/FormFieldLabel.js';
import { Input } from '../input/Input.js';
import { usePaginationContext } from './usePaginationContext.js';
import css_248z from './GoToInput.css.js';

const withBaseName = makePrefixer("saltGoToInput");
const GoToInput = forwardRef(
  function GoToInput2({
    className,
    inputRef,
    inputVariant = "primary",
    label = "Go to",
    ...restProps
  }, ref) {
    const targetWindow = useWindow();
    useComponentCssInjection({
      testId: "salt-go-to-input",
      css: css_248z,
      window: targetWindow
    });
    const { count, onPageChange } = usePaginationContext();
    const [inputValue, setInputValue] = useState("");
    const onChange = (event) => {
      setInputValue(event.target.value);
    };
    const onKeyDown = (event) => {
      if (event.key === "Enter") {
        const pageValue = Number(inputValue);
        if (!inputValue.startsWith("0") && !Number.isNaN(pageValue) && pageValue > 0 && pageValue <= count) {
          onPageChange(event, pageValue);
        }
        setInputValue("");
      }
    };
    const onBlur = () => {
      setInputValue("");
    };
    const widthCh = `${`${count}`.length}ch`;
    return /* @__PURE__ */ jsxs(
      FormField,
      {
        labelPlacement: "left",
        className: clsx(withBaseName(), className),
        ref,
        ...restProps,
        children: [
          /* @__PURE__ */ jsx(FormFieldLabel, { children: label }),
          /* @__PURE__ */ jsx(
            Input,
            {
              className: clsx(withBaseName("input"), {
                [withBaseName("inputDefaultSize")]: count < 100
              }),
              ref: inputRef,
              inputProps: {
                style: { width: widthCh }
              },
              onBlur,
              onChange,
              onKeyDown,
              value: inputValue,
              textAlign: "center",
              variant: inputVariant
            }
          )
        ]
      }
    );
  }
);

export { GoToInput };
//# sourceMappingURL=GoToInput.js.map
