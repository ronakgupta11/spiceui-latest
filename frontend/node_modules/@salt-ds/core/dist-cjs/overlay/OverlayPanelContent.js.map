{"version":3,"file":"OverlayPanelContent.js","sources":["../src/overlay/OverlayPanelContent.tsx"],"sourcesContent":["import { useComponentCssInjection } from \"@salt-ds/styles\";\nimport { useWindow } from \"@salt-ds/window\";\nimport clsx from \"clsx\";\nimport {\n  type ComponentPropsWithoutRef,\n  type ReactNode,\n  forwardRef,\n  useCallback,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  debounce,\n  makePrefixer,\n  useForkRef,\n  useIsomorphicLayoutEffect,\n  useResizeObserver,\n} from \"../utils\";\nimport overlayPanelContentCss from \"./OverlayPanelContent.css\";\n\nconst withBaseName = makePrefixer(\"saltOverlayPanelContent\");\n\nexport interface OverlayPanelContentProps\n  extends ComponentPropsWithoutRef<\"div\"> {\n  /**\n   * The content of Overlay Panel Content\n   */\n  children?: ReactNode;\n}\n\nexport const OverlayPanelContent = forwardRef<\n  HTMLDivElement,\n  OverlayPanelContentProps\n>(function OverlayPanelContent(props, ref) {\n  const targetWindow = useWindow();\n  useComponentCssInjection({\n    testId: \"salt-overlay-panel-content\",\n    css: overlayPanelContentCss,\n    window: targetWindow,\n  });\n\n  const { children, className, ...rest } = props;\n  const [scrollBarTop, setScrollBarTop] = useState(false);\n  const [scrollBarBottom, setScrollBarBottom] = useState(true);\n  const [isOverflowing, setIsOverflowing] = useState(false);\n  const divRef = useRef<HTMLDivElement>(null);\n  const containerRef = useForkRef(divRef, ref);\n  const handleScroll = debounce(() => {\n    const container = divRef.current;\n    if (!container) return;\n    setScrollBarTop(container.scrollTop > 0);\n    setScrollBarBottom(\n      container.scrollHeight - container.scrollTop - container.clientHeight !==\n        0,\n    );\n  });\n\n  const checkOverflow = useCallback(() => {\n    if (!divRef.current) return;\n    setIsOverflowing(\n      divRef.current.scrollHeight > divRef.current.offsetHeight + 1, // var(--salt-size-border)\n    );\n  }, []);\n\n  useResizeObserver({ ref: divRef, onResize: checkOverflow });\n\n  useIsomorphicLayoutEffect(() => {\n    checkOverflow();\n  }, [checkOverflow]);\n\n  return (\n    <div className={clsx(withBaseName(), className)}>\n      <div\n        className={clsx(withBaseName(\"container\"), {\n          [withBaseName(\"overflow\")]: isOverflowing,\n          [withBaseName(\"scroll-top\")]: isOverflowing && scrollBarTop,\n          [withBaseName(\"scroll-bottom\")]: isOverflowing && scrollBarBottom,\n        })}\n        onScrollCapture={handleScroll}\n        {...rest}\n        ref={containerRef}\n      >\n        {children}\n      </div>\n    </div>\n  );\n});\n"],"names":["makePrefixer","forwardRef","OverlayPanelContent","useWindow","useComponentCssInjection","overlayPanelContentCss","useState","useRef","useForkRef","debounce","useCallback","useResizeObserver","useIsomorphicLayoutEffect","jsx"],"mappings":";;;;;;;;;;;;;;;;;;AAoBA,MAAM,YAAA,GAAeA,0BAAa,yBAAyB,CAAA;AAUpD,MAAM,mBAAsB,GAAAC,gBAAA,CAGjC,SAASC,oBAAAA,CAAoB,OAAO,GAAK,EAAA;AACzC,EAAA,MAAM,eAAeC,gBAAU,EAAA;AAC/B,EAAyBC,+BAAA,CAAA;AAAA,IACvB,MAAQ,EAAA,4BAAA;AAAA,IACR,GAAK,EAAAC,qBAAA;AAAA,IACL,MAAQ,EAAA;AAAA,GACT,CAAA;AAED,EAAA,MAAM,EAAE,QAAA,EAAU,SAAW,EAAA,GAAG,MAAS,GAAA,KAAA;AACzC,EAAA,MAAM,CAAC,YAAA,EAAc,eAAe,CAAA,GAAIC,eAAS,KAAK,CAAA;AACtD,EAAA,MAAM,CAAC,eAAA,EAAiB,kBAAkB,CAAA,GAAIA,eAAS,IAAI,CAAA;AAC3D,EAAA,MAAM,CAAC,aAAA,EAAe,gBAAgB,CAAA,GAAIA,eAAS,KAAK,CAAA;AACxD,EAAM,MAAA,MAAA,GAASC,aAAuB,IAAI,CAAA;AAC1C,EAAM,MAAA,YAAA,GAAeC,qBAAW,CAAA,MAAA,EAAQ,GAAG,CAAA;AAC3C,EAAM,MAAA,YAAA,GAAeC,kBAAS,MAAM;AAClC,IAAA,MAAM,YAAY,MAAO,CAAA,OAAA;AACzB,IAAA,IAAI,CAAC,SAAW,EAAA;AAChB,IAAgB,eAAA,CAAA,SAAA,CAAU,YAAY,CAAC,CAAA;AACvC,IAAA,kBAAA;AAAA,MACE,SAAU,CAAA,YAAA,GAAe,SAAU,CAAA,SAAA,GAAY,UAAU,YACvD,KAAA;AAAA,KACJ;AAAA,GACD,CAAA;AAED,EAAM,MAAA,aAAA,GAAgBC,kBAAY,MAAM;AACtC,IAAI,IAAA,CAAC,OAAO,OAAS,EAAA;AACrB,IAAA,gBAAA;AAAA,MACE,MAAO,CAAA,OAAA,CAAQ,YAAe,GAAA,MAAA,CAAO,QAAQ,YAAe,GAAA;AAAA;AAAA,KAC9D;AAAA,GACF,EAAG,EAAE,CAAA;AAEL,EAAAC,mCAAA,CAAkB,EAAE,GAAA,EAAK,MAAQ,EAAA,QAAA,EAAU,eAAe,CAAA;AAE1D,EAAAC,mDAAA,CAA0B,MAAM;AAC9B,IAAc,aAAA,EAAA;AAAA,GAChB,EAAG,CAAC,aAAa,CAAC,CAAA;AAElB,EAAA,sCACG,KAAI,EAAA,EAAA,SAAA,EAAW,KAAK,YAAa,EAAA,EAAG,SAAS,CAC5C,EAAA,QAAA,kBAAAC,cAAA;AAAA,IAAC,KAAA;AAAA,IAAA;AAAA,MACC,SAAW,EAAA,IAAA,CAAK,YAAa,CAAA,WAAW,CAAG,EAAA;AAAA,QACzC,CAAC,YAAA,CAAa,UAAU,CAAC,GAAG,aAAA;AAAA,QAC5B,CAAC,YAAA,CAAa,YAAY,CAAC,GAAG,aAAiB,IAAA,YAAA;AAAA,QAC/C,CAAC,YAAA,CAAa,eAAe,CAAC,GAAG,aAAiB,IAAA;AAAA,OACnD,CAAA;AAAA,MACD,eAAiB,EAAA,YAAA;AAAA,MAChB,GAAG,IAAA;AAAA,MACJ,GAAK,EAAA,YAAA;AAAA,MAEJ;AAAA;AAAA,GAEL,EAAA,CAAA;AAEJ,CAAC;;;;"}