'use strict';

var jsxRuntime = require('react/jsx-runtime');
var clsx = require('clsx');
require('../form-field-context/FormFieldContext.js');
var useFormFieldProps = require('../form-field-context/useFormFieldProps.js');
var StatusIndicator = require('../status-indicator/StatusIndicator.js');
var Text = require('../text/Text.js');
require('../text/Code.js');
require('../text/Display.js');
require('../text/Headings.js');
require('../text/Label.js');
require('../text/TextAction.js');
require('../text/TextNotation.js');
require('react');
var makePrefixer = require('../utils/makePrefixer.js');
require('../utils/useFloatingUI/useFloatingUI.js');
require('../utils/useId.js');
require('../salt-provider/SaltProvider.js');
require('../viewport/ViewportProvider.js');
var styles = require('@salt-ds/styles');
var window = require('@salt-ds/window');
var FormFieldHelperText$1 = require('./FormFieldHelperText.css.js');

const withBaseName = makePrefixer.makePrefixer("saltFormFieldHelperText");
const FormFieldHelperText = ({
  className,
  children,
  ...restProps
}) => {
  const targetWindow = window.useWindow();
  styles.useComponentCssInjection({
    testId: "salt-form-field-helper-text",
    css: FormFieldHelperText$1,
    window: targetWindow
  });
  const { a11yProps, disabled, readOnly, validationStatus } = useFormFieldProps.useFormFieldProps();
  return /* @__PURE__ */ jsxRuntime.jsxs(
    "div",
    {
      className: clsx(
        withBaseName(),
        { [withBaseName("withValidation")]: validationStatus },
        className
      ),
      children: [
        !disabled && !readOnly && validationStatus && /* @__PURE__ */ jsxRuntime.jsx(StatusIndicator.StatusIndicator, { status: validationStatus }),
        /* @__PURE__ */ jsxRuntime.jsx(
          Text.Text,
          {
            disabled,
            id: a11yProps == null ? void 0 : a11yProps["aria-describedby"],
            styleAs: "label",
            color: validationStatus ?? "secondary",
            ...restProps,
            children
          }
        )
      ]
    }
  );
};

exports.FormFieldHelperText = FormFieldHelperText;
//# sourceMappingURL=FormFieldHelperText.js.map
